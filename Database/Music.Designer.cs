//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ShauniModel", "FK_AlbumGenre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Genre), "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Album), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "FK_AlbumSong", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Album), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Song), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "FK_ArtistSong", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Artist), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Song), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "FK_SongGenre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Genre), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Song), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "AudioStatisticArtist", "AudioStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.AudioStatistic), "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Artist), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "TimeLineAudioStatistic", "TimeLine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.TimeLine), "AudioStatistic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.AudioStatistic), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "FormatSong", "Format", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shauni.Database.Format), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Song))]
[assembly: EdmRelationshipAttribute("ShauniModel", "AlbumCover", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Album), "Cover", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Cover), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "SongLyric", "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Song), "Lyric", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shauni.Database.Lyric))]
[assembly: EdmRelationshipAttribute("ShauniModel", "TagLastFm", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shauni.Database.Tag), "LastFm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.LastFm), true)]
[assembly: EdmRelationshipAttribute("ShauniModel", "LastFmSong", "LastFm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shauni.Database.LastFm), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Song))]
[assembly: EdmRelationshipAttribute("ShauniModel", "SongEchoNest", "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shauni.Database.Song), "EchoNest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Shauni.Database.TheEchoNest))]

#endregion

namespace Shauni.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ShauniDatabase : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ShauniDatabase object using the connection string found in the 'ShauniDatabase' section of the application configuration file.
        /// </summary>
        public ShauniDatabase() : base("name=ShauniDatabase", "ShauniDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShauniDatabase object.
        /// </summary>
        public ShauniDatabase(string connectionString) : base(connectionString, "ShauniDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShauniDatabase object.
        /// </summary>
        public ShauniDatabase(EntityConnection connection) : base(connection, "ShauniDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> Album
        {
            get
            {
                if ((_Album == null))
                {
                    _Album = base.CreateObjectSet<Album>("Album");
                }
                return _Album;
            }
        }
        private ObjectSet<Album> _Album;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artist> Artist
        {
            get
            {
                if ((_Artist == null))
                {
                    _Artist = base.CreateObjectSet<Artist>("Artist");
                }
                return _Artist;
            }
        }
        private ObjectSet<Artist> _Artist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genre
        {
            get
            {
                if ((_Genre == null))
                {
                    _Genre = base.CreateObjectSet<Genre>("Genre");
                }
                return _Genre;
            }
        }
        private ObjectSet<Genre> _Genre;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Song> Song
        {
            get
            {
                if ((_Song == null))
                {
                    _Song = base.CreateObjectSet<Song>("Song");
                }
                return _Song;
            }
        }
        private ObjectSet<Song> _Song;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AudioStatistic> AudioStatistic
        {
            get
            {
                if ((_AudioStatistic == null))
                {
                    _AudioStatistic = base.CreateObjectSet<AudioStatistic>("AudioStatistic");
                }
                return _AudioStatistic;
            }
        }
        private ObjectSet<AudioStatistic> _AudioStatistic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeLine> TimeLine
        {
            get
            {
                if ((_TimeLine == null))
                {
                    _TimeLine = base.CreateObjectSet<TimeLine>("TimeLine");
                }
                return _TimeLine;
            }
        }
        private ObjectSet<TimeLine> _TimeLine;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Format> Format
        {
            get
            {
                if ((_Format == null))
                {
                    _Format = base.CreateObjectSet<Format>("Format");
                }
                return _Format;
            }
        }
        private ObjectSet<Format> _Format;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Picture
        {
            get
            {
                if ((_Picture == null))
                {
                    _Picture = base.CreateObjectSet<Picture>("Picture");
                }
                return _Picture;
            }
        }
        private ObjectSet<Picture> _Picture;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cover> Covers
        {
            get
            {
                if ((_Covers == null))
                {
                    _Covers = base.CreateObjectSet<Cover>("Covers");
                }
                return _Covers;
            }
        }
        private ObjectSet<Cover> _Covers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lyric> Lyrics
        {
            get
            {
                if ((_Lyrics == null))
                {
                    _Lyrics = base.CreateObjectSet<Lyric>("Lyrics");
                }
                return _Lyrics;
            }
        }
        private ObjectSet<Lyric> _Lyrics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LastFm> LastFm
        {
            get
            {
                if ((_LastFm == null))
                {
                    _LastFm = base.CreateObjectSet<LastFm>("LastFm");
                }
                return _LastFm;
            }
        }
        private ObjectSet<LastFm> _LastFm;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TheEchoNest> TheEchoNest
        {
            get
            {
                if ((_TheEchoNest == null))
                {
                    _TheEchoNest = base.CreateObjectSet<TheEchoNest>("TheEchoNest");
                }
                return _TheEchoNest;
            }
        }
        private ObjectSet<TheEchoNest> _TheEchoNest;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Album EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbum(Album album)
        {
            base.AddObject("Album", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Artist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtist(Artist artist)
        {
            base.AddObject("Artist", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genre EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenre(Genre genre)
        {
            base.AddObject("Genre", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Song EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSong(Song song)
        {
            base.AddObject("Song", song);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AudioStatistic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudioStatistic(AudioStatistic audioStatistic)
        {
            base.AddObject("AudioStatistic", audioStatistic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeLine EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeLine(TimeLine timeLine)
        {
            base.AddObject("TimeLine", timeLine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Format EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormat(Format format)
        {
            base.AddObject("Format", format);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Picture EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPicture(Picture picture)
        {
            base.AddObject("Picture", picture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Covers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCovers(Cover cover)
        {
            base.AddObject("Covers", cover);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lyrics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLyrics(Lyric lyric)
        {
            base.AddObject("Lyrics", lyric);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LastFm EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLastFm(LastFm lastFm)
        {
            base.AddObject("LastFm", lastFm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TheEchoNest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTheEchoNest(TheEchoNest theEchoNest)
        {
            base.AddObject("TheEchoNest", theEchoNest);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="genreID">Initial value of the GenreID property.</param>
        public static Album CreateAlbum(global::System.Int32 id, global::System.String name, global::System.Int32 genreID)
        {
            Album album = new Album();
            album.ID = id;
            album.Name = name;
            album.GenreID = genreID;
            return album;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreID
        {
            get
            {
                return _GenreID;
            }
            set
            {
                OnGenreIDChanging(value);
                ReportPropertyChanging("GenreID");
                _GenreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreID");
                OnGenreIDChanged();
            }
        }
        private global::System.Int32 _GenreID;
        partial void OnGenreIDChanging(global::System.Int32 value);
        partial void OnGenreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TrackNumber
        {
            get
            {
                return _TrackNumber;
            }
            set
            {
                OnTrackNumberChanging(value);
                ReportPropertyChanging("TrackNumber");
                _TrackNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackNumber");
                OnTrackNumberChanged();
            }
        }
        private Nullable<global::System.Int16> _TrackNumber;
        partial void OnTrackNumberChanging(Nullable<global::System.Int16> value);
        partial void OnTrackNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublicationDate
        {
            get
            {
                return _PublicationDate;
            }
            set
            {
                OnPublicationDateChanging(value);
                ReportPropertyChanging("PublicationDate");
                _PublicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublicationDate");
                OnPublicationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublicationDate;
        partial void OnPublicationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_AlbumGenre", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_AlbumGenre", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_AlbumGenre", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_AlbumGenre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("ShauniModel.FK_AlbumGenre", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_AlbumSong", "Song")]
        public EntityCollection<Song> Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("ShauniModel.FK_AlbumSong", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("ShauniModel.FK_AlbumSong", "Song", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "AlbumCover", "Cover")]
        public EntityCollection<Cover> Covers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cover>("ShauniModel.AlbumCover", "Cover");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cover>("ShauniModel.AlbumCover", "Cover", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artist object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Artist CreateArtist(global::System.Int32 id, global::System.String name)
        {
            Artist artist = new Artist();
            artist.ID = id;
            artist.Name = name;
            return artist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Biography
        {
            get
            {
                return _Biography;
            }
            set
            {
                OnBiographyChanging(value);
                ReportPropertyChanging("Biography");
                _Biography = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Biography");
                OnBiographyChanged();
            }
        }
        private global::System.String _Biography;
        partial void OnBiographyChanging(global::System.String value);
        partial void OnBiographyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_ArtistSong", "Song")]
        public EntityCollection<Song> Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("ShauniModel.FK_ArtistSong", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("ShauniModel.FK_ArtistSong", "Song", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "AudioStatisticArtist", "AudioStatistic")]
        public EntityCollection<AudioStatistic> AudioStatistic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AudioStatistic>("ShauniModel.AudioStatisticArtist", "AudioStatistic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AudioStatistic>("ShauniModel.AudioStatisticArtist", "AudioStatistic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="AudioStatistic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AudioStatistic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AudioStatistic object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counter">Initial value of the Counter property.</param>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        /// <param name="timeLineID">Initial value of the TimeLineID property.</param>
        public static AudioStatistic CreateAudioStatistic(global::System.Int32 id, global::System.Int32 counter, global::System.Int32 artistID, global::System.Int32 timeLineID)
        {
            AudioStatistic audioStatistic = new AudioStatistic();
            audioStatistic.ID = id;
            audioStatistic.Counter = counter;
            audioStatistic.ArtistID = artistID;
            audioStatistic.TimeLineID = timeLineID;
            return audioStatistic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Counter
        {
            get
            {
                return _Counter;
            }
            set
            {
                OnCounterChanging(value);
                ReportPropertyChanging("Counter");
                _Counter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counter");
                OnCounterChanged();
            }
        }
        private global::System.Int32 _Counter;
        partial void OnCounterChanging(global::System.Int32 value);
        partial void OnCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                OnArtistIDChanging(value);
                ReportPropertyChanging("ArtistID");
                _ArtistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistID");
                OnArtistIDChanged();
            }
        }
        private global::System.Int32 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int32 value);
        partial void OnArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeLineID
        {
            get
            {
                return _TimeLineID;
            }
            set
            {
                OnTimeLineIDChanging(value);
                ReportPropertyChanging("TimeLineID");
                _TimeLineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeLineID");
                OnTimeLineIDChanged();
            }
        }
        private global::System.Int32 _TimeLineID;
        partial void OnTimeLineIDChanging(global::System.Int32 value);
        partial void OnTimeLineIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "AudioStatisticArtist", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.AudioStatisticArtist", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.AudioStatisticArtist", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.AudioStatisticArtist", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("ShauniModel.AudioStatisticArtist", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "TimeLineAudioStatistic", "TimeLine")]
        public TimeLine TimeLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeLine>("ShauniModel.TimeLineAudioStatistic", "TimeLine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeLine>("ShauniModel.TimeLineAudioStatistic", "TimeLine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeLine> TimeLineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeLine>("ShauniModel.TimeLineAudioStatistic", "TimeLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeLine>("ShauniModel.TimeLineAudioStatistic", "TimeLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Cover")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cover : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cover object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="albumID">Initial value of the AlbumID property.</param>
        public static Cover CreateCover(global::System.Int32 id, global::System.Int32 albumID)
        {
            Cover cover = new Cover();
            cover.ID = id;
            cover.AlbumID = albumID;
            return cover;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Front
        {
            get
            {
                return StructuralObject.GetValidValue(_Front);
            }
            set
            {
                OnFrontChanging(value);
                ReportPropertyChanging("Front");
                _Front = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Front");
                OnFrontChanged();
            }
        }
        private global::System.Byte[] _Front;
        partial void OnFrontChanging(global::System.Byte[] value);
        partial void OnFrontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Back
        {
            get
            {
                return StructuralObject.GetValidValue(_Back);
            }
            set
            {
                OnBackChanging(value);
                ReportPropertyChanging("Back");
                _Back = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Back");
                OnBackChanged();
            }
        }
        private global::System.Byte[] _Back;
        partial void OnBackChanging(global::System.Byte[] value);
        partial void OnBackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumID
        {
            get
            {
                return _AlbumID;
            }
            set
            {
                OnAlbumIDChanging(value);
                ReportPropertyChanging("AlbumID");
                _AlbumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumID");
                OnAlbumIDChanged();
            }
        }
        private global::System.Int32 _AlbumID;
        partial void OnAlbumIDChanging(global::System.Int32 value);
        partial void OnAlbumIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "AlbumCover", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.AlbumCover", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.AlbumCover", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.AlbumCover", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("ShauniModel.AlbumCover", "Album", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Format")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Format : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Format object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Format CreateFormat(global::System.Int32 id, global::System.String name)
        {
            Format format = new Format();
            format.ID = id;
            format.Name = name;
            return format;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size = 0;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SamplingRate
        {
            get
            {
                return _SamplingRate;
            }
            set
            {
                OnSamplingRateChanging(value);
                ReportPropertyChanging("SamplingRate");
                _SamplingRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SamplingRate");
                OnSamplingRateChanged();
            }
        }
        private global::System.Int32 _SamplingRate = 0;
        partial void OnSamplingRateChanging(global::System.Int32 value);
        partial void OnSamplingRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitRate
        {
            get
            {
                return _BitRate;
            }
            set
            {
                OnBitRateChanging(value);
                ReportPropertyChanging("BitRate");
                _BitRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitRate");
                OnBitRateChanged();
            }
        }
        private global::System.Int32 _BitRate = 0;
        partial void OnBitRateChanging(global::System.Int32 value);
        partial void OnBitRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FormatSong", "Song")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.FormatSong", "Song").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.FormatSong", "Song").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.FormatSong", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("ShauniModel.FormatSong", "Song", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String name)
        {
            Genre genre = new Genre();
            genre.ID = id;
            genre.Name = name;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_AlbumGenre", "Album")]
        public EntityCollection<Album> Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Album>("ShauniModel.FK_AlbumGenre", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Album>("ShauniModel.FK_AlbumGenre", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_SongGenre", "Song")]
        public EntityCollection<Song> Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("ShauniModel.FK_SongGenre", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("ShauniModel.FK_SongGenre", "Song", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="LastFm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LastFm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LastFm object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LastFm CreateLastFm(global::System.Int32 id)
        {
            LastFm lastFm = new LastFm();
            lastFm.ID = id;
            return lastFm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Playcount
        {
            get
            {
                return _Playcount;
            }
            set
            {
                OnPlaycountChanging(value);
                ReportPropertyChanging("Playcount");
                _Playcount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Playcount");
                OnPlaycountChanged();
            }
        }
        private Nullable<global::System.Int32> _Playcount;
        partial void OnPlaycountChanging(Nullable<global::System.Int32> value);
        partial void OnPlaycountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Listeners
        {
            get
            {
                return _Listeners;
            }
            set
            {
                OnListenersChanging(value);
                ReportPropertyChanging("Listeners");
                _Listeners = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Listeners");
                OnListenersChanged();
            }
        }
        private Nullable<global::System.Int32> _Listeners;
        partial void OnListenersChanging(Nullable<global::System.Int32> value);
        partial void OnListenersChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "TagLastFm", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("ShauniModel.TagLastFm", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("ShauniModel.TagLastFm", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "LastFmSong", "Song")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.LastFmSong", "Song").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.LastFmSong", "Song").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.LastFmSong", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("ShauniModel.LastFmSong", "Song", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Lyric")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lyric : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lyric object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Lyric CreateLyric(global::System.Int32 id, global::System.String text)
        {
            Lyric lyric = new Lyric();
            lyric.ID = id;
            lyric.Text = text;
            return lyric;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "SongLyric", "Song")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongLyric", "Song").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongLyric", "Song").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongLyric", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("ShauniModel.SongLyric", "Song", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counter">Initial value of the Counter property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        public static Picture CreatePicture(global::System.Int32 id, global::System.Int32 counter, global::System.String name, global::System.String filename)
        {
            Picture picture = new Picture();
            picture.ID = id;
            picture.Counter = counter;
            picture.Name = name;
            picture.Filename = filename;
            return picture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Counter
        {
            get
            {
                return _Counter;
            }
            set
            {
                OnCounterChanging(value);
                ReportPropertyChanging("Counter");
                _Counter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counter");
                OnCounterChanged();
            }
        }
        private global::System.Int32 _Counter;
        partial void OnCounterChanging(global::System.Int32 value);
        partial void OnCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Favourite
        {
            get
            {
                return _Favourite;
            }
            set
            {
                OnFavouriteChanging(value);
                ReportPropertyChanging("Favourite");
                _Favourite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Favourite");
                OnFavouriteChanged();
            }
        }
        private Nullable<global::System.Boolean> _Favourite = false;
        partial void OnFavouriteChanging(Nullable<global::System.Boolean> value);
        partial void OnFavouriteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Stars
        {
            get
            {
                return _Stars;
            }
            set
            {
                OnStarsChanging(value);
                ReportPropertyChanging("Stars");
                _Stars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stars");
                OnStarsChanged();
            }
        }
        private Nullable<global::System.Byte> _Stars = 0;
        partial void OnStarsChanging(Nullable<global::System.Byte> value);
        partial void OnStarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Song object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="counter">Initial value of the Counter property.</param>
        /// <param name="genreID">Initial value of the GenreID property.</param>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        /// <param name="albumID">Initial value of the AlbumID property.</param>
        public static Song CreateSong(global::System.Int32 id, global::System.Int32 counter, global::System.Int32 genreID, global::System.Int32 artistID, global::System.Int32 albumID)
        {
            Song song = new Song();
            song.ID = id;
            song.Counter = counter;
            song.GenreID = genreID;
            song.ArtistID = artistID;
            song.AlbumID = albumID;
            return song;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Counter
        {
            get
            {
                return _Counter;
            }
            set
            {
                OnCounterChanging(value);
                ReportPropertyChanging("Counter");
                _Counter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counter");
                OnCounterChanged();
            }
        }
        private global::System.Int32 _Counter;
        partial void OnCounterChanging(global::System.Int32 value);
        partial void OnCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Stars
        {
            get
            {
                return _Stars;
            }
            set
            {
                OnStarsChanging(value);
                ReportPropertyChanging("Stars");
                _Stars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stars");
                OnStarsChanged();
            }
        }
        private Nullable<global::System.Byte> _Stars = 0;
        partial void OnStarsChanging(Nullable<global::System.Byte> value);
        partial void OnStarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreID
        {
            get
            {
                return _GenreID;
            }
            set
            {
                OnGenreIDChanging(value);
                ReportPropertyChanging("GenreID");
                _GenreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreID");
                OnGenreIDChanged();
            }
        }
        private global::System.Int32 _GenreID;
        partial void OnGenreIDChanging(global::System.Int32 value);
        partial void OnGenreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                OnArtistIDChanging(value);
                ReportPropertyChanging("ArtistID");
                _ArtistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistID");
                OnArtistIDChanged();
            }
        }
        private global::System.Int32 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int32 value);
        partial void OnArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumID
        {
            get
            {
                return _AlbumID;
            }
            set
            {
                OnAlbumIDChanging(value);
                ReportPropertyChanging("AlbumID");
                _AlbumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumID");
                OnAlbumIDChanged();
            }
        }
        private global::System.Int32 _AlbumID;
        partial void OnAlbumIDChanging(global::System.Int32 value);
        partial void OnAlbumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Favourite
        {
            get
            {
                return _Favourite;
            }
            set
            {
                OnFavouriteChanging(value);
                ReportPropertyChanging("Favourite");
                _Favourite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Favourite");
                OnFavouriteChanged();
            }
        }
        private Nullable<global::System.Boolean> _Favourite = false;
        partial void OnFavouriteChanging(Nullable<global::System.Boolean> value);
        partial void OnFavouriteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_AlbumSong", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.FK_AlbumSong", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.FK_AlbumSong", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("ShauniModel.FK_AlbumSong", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("ShauniModel.FK_AlbumSong", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_ArtistSong", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.FK_ArtistSong", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.FK_ArtistSong", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("ShauniModel.FK_ArtistSong", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("ShauniModel.FK_ArtistSong", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FK_SongGenre", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_SongGenre", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_SongGenre", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("ShauniModel.FK_SongGenre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("ShauniModel.FK_SongGenre", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "FormatSong", "Format")]
        public Format Format
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("ShauniModel.FormatSong", "Format").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("ShauniModel.FormatSong", "Format").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Format> FormatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Format>("ShauniModel.FormatSong", "Format");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Format>("ShauniModel.FormatSong", "Format", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "SongLyric", "Lyric")]
        public Lyric Lyric
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lyric>("ShauniModel.SongLyric", "Lyric").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lyric>("ShauniModel.SongLyric", "Lyric").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lyric> LyricReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lyric>("ShauniModel.SongLyric", "Lyric");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lyric>("ShauniModel.SongLyric", "Lyric", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "LastFmSong", "LastFm")]
        public LastFm LastFm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.LastFmSong", "LastFm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.LastFmSong", "LastFm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LastFm> LastFmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.LastFmSong", "LastFm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LastFm>("ShauniModel.LastFmSong", "LastFm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "SongEchoNest", "EchoNest")]
        public TheEchoNest EchoNest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TheEchoNest>("ShauniModel.SongEchoNest", "EchoNest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TheEchoNest>("ShauniModel.SongEchoNest", "EchoNest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TheEchoNest> EchoNestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TheEchoNest>("ShauniModel.SongEchoNest", "EchoNest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TheEchoNest>("ShauniModel.SongEchoNest", "EchoNest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="lastFmID">Initial value of the LastFmID property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.Int32 lastFmID)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.LastFmID = lastFmID;
            return tag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastFmID
        {
            get
            {
                return _LastFmID;
            }
            set
            {
                OnLastFmIDChanging(value);
                ReportPropertyChanging("LastFmID");
                _LastFmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastFmID");
                OnLastFmIDChanged();
            }
        }
        private global::System.Int32 _LastFmID;
        partial void OnLastFmIDChanging(global::System.Int32 value);
        partial void OnLastFmIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "TagLastFm", "LastFm")]
        public LastFm LastFm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.TagLastFm", "LastFm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.TagLastFm", "LastFm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LastFm> LastFmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LastFm>("ShauniModel.TagLastFm", "LastFm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LastFm>("ShauniModel.TagLastFm", "LastFm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="TheEchoNest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TheEchoNest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TheEchoNest object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        public static TheEchoNest CreateTheEchoNest(global::System.Int32 id, global::System.Int32 key, global::System.Int32 mode)
        {
            TheEchoNest theEchoNest = new TheEchoNest();
            theEchoNest.ID = id;
            theEchoNest.Key = key;
            theEchoNest.Mode = mode;
            return theEchoNest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Tempo
        {
            get
            {
                return _Tempo;
            }
            set
            {
                OnTempoChanging(value);
                ReportPropertyChanging("Tempo");
                _Tempo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tempo");
                OnTempoChanged();
            }
        }
        private Nullable<global::System.Double> _Tempo;
        partial void OnTempoChanging(Nullable<global::System.Double> value);
        partial void OnTempoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Energy
        {
            get
            {
                return _Energy;
            }
            set
            {
                OnEnergyChanging(value);
                ReportPropertyChanging("Energy");
                _Energy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Energy");
                OnEnergyChanged();
            }
        }
        private Nullable<global::System.Double> _Energy;
        partial void OnEnergyChanging(Nullable<global::System.Double> value);
        partial void OnEnergyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Danceability
        {
            get
            {
                return _Danceability;
            }
            set
            {
                OnDanceabilityChanging(value);
                ReportPropertyChanging("Danceability");
                _Danceability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Danceability");
                OnDanceabilityChanged();
            }
        }
        private Nullable<global::System.Double> _Danceability;
        partial void OnDanceabilityChanging(Nullable<global::System.Double> value);
        partial void OnDanceabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.Int32 _Key;
        partial void OnKeyChanging(global::System.Int32 value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.Int32 _Mode;
        partial void OnModeChanging(global::System.Int32 value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Loudness
        {
            get
            {
                return _Loudness;
            }
            set
            {
                OnLoudnessChanging(value);
                ReportPropertyChanging("Loudness");
                _Loudness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Loudness");
                OnLoudnessChanged();
            }
        }
        private Nullable<global::System.Double> _Loudness;
        partial void OnLoudnessChanging(Nullable<global::System.Double> value);
        partial void OnLoudnessChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "SongEchoNest", "Song")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongEchoNest", "Song").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongEchoNest", "Song").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("ShauniModel.SongEchoNest", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("ShauniModel.SongEchoNest", "Song", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShauniModel", Name="TimeLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeLine object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static TimeLine CreateTimeLine(global::System.Int32 id, global::System.DateTime date)
        {
            TimeLine timeLine = new TimeLine();
            timeLine.ID = id;
            timeLine.Date = date;
            return timeLine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShauniModel", "TimeLineAudioStatistic", "AudioStatistic")]
        public EntityCollection<AudioStatistic> AudioStatistic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AudioStatistic>("ShauniModel.TimeLineAudioStatistic", "AudioStatistic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AudioStatistic>("ShauniModel.TimeLineAudioStatistic", "AudioStatistic", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
